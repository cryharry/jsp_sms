// File: ConnectionEventsVt.java
// Generated: Thu Oct 22 12:17:11 2015

// This Java source file has been automatically
// generated by EZ-JCom.

package SMS;

/** This class corresponds to a COM interface.
  * Objects of this class are not created directly,
  * but are obtained by calling methods of other COM objects.
 */
public class ConnectionEventsVt extends ezjcom.JComObject {

	/** InfoMessage. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void InfoMessage(SMS.Error pError, SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;

	/** BeginTransComplete. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void BeginTransComplete(int TransactionLevel, SMS.Error pError, SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;

	/** CommitTransComplete. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void CommitTransComplete(SMS.Error pError, SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;

	/** RollbackTransComplete. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void RollbackTransComplete(SMS.Error pError, SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;

	/** WillExecute. 
	 * <P>  Parameter <i>Source</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>CursorType</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>LockType</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>Options</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void WillExecute(String[] Source, 
		SMS.CursorTypeEnum[] CursorType, 
		SMS.LockTypeEnum[] LockType, 
		int[] Options, 
		SMS.EventStatusEnum[] adStatus, 
		SMS._Command pCommand, SMS._Recordset pRecordset, SMS._Connection pConnection) throws ezjcom.JComException;

	/** ExecuteComplete. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void ExecuteComplete(int RecordsAffected, SMS.Error pError, SMS.EventStatusEnum[] adStatus, 
		SMS._Command pCommand, SMS._Recordset pRecordset, SMS._Connection pConnection) throws ezjcom.JComException;

	/** WillConnect. 
	 * <P>  Parameter <i>ConnectionString</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>UserID</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>Password</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>Options</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 * <BR> Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void WillConnect(String[] ConnectionString, 
		String[] UserID, 
		String[] Password, 
		int[] Options, 
		SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;

	/** ConnectComplete. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void ConnectComplete(SMS.Error pError, SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;

	/** Disconnect. 
	 * <P>  Parameter <i>adStatus</i> is an IN/OUT parameter.  It requires an initialized array of size 1.
	 */
	public native void Disconnect(SMS.EventStatusEnum[] adStatus, 
		SMS._Connection pConnection) throws ezjcom.JComException;



	// Implementation
	//

	/** Constructors for internal EZ JCom Usage only
	  * DO NOT attempt to construct this object!  It is retrieved from other objects.
	  */
	private ConnectionEventsVt() {}
	private ConnectionEventsVt( java.lang.ref.Reference ref ) {}

	private ConnectionEventsVt( ezjcom.JComObject obj ) throws ezjcom.JComException
	{
		if ( ! __JComLoad( obj, false ))
			throw new ClassCastException( "Object/interface passed does not support \"ConnectionEventsVt\"" );
	}

	/** Use this method only for creating a COM interface of type ConnectionEventsVt
	  * from another existing COM interface, when you know that it is possible.
	  */
	public static ConnectionEventsVt _ezjcomCoerceObject(ezjcom.JComObject obj) throws ezjcom.JComException { return new ConnectionEventsVt(obj);}

	/** JNI function used internally by EZ-JCom */
	native boolean __JComLoad( ezjcom.JComObject obj, boolean initial ) throws ezjcom.JComException;
	static {
		System.loadLibrary( "JKCMSMS" );
	}

}

